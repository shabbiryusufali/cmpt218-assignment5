import {LiveAnnouncer} from '@angular/cdk/a11y';
import {AfterViewInit, Component, OnInit, ViewChild} from '@angular/core';
import {MatSort, Sort} from '@angular/material/sort';
import {MatTableDataSource} from '@angular/material/table';

interface covidElement {
  location:string;
  newcases: number;
  newdeaths: number;
  newrecovered: number;
  cumulativecases: number;
  cumulativedeaths : number;
  cumulativerecovered : number;
}

const COVID_DATA:covidElement[] = [
  {location:"Canada", newcases: 1, newdeaths:1 , newrecovered:1, cumulativecases:1, cumulativedeaths: 1, cumulativerecovered: 1},
  {location:"BC", newcases: 1, newdeaths:1 , newrecovered:1, cumulativecases:1, cumulativedeaths: 1, cumulativerecovered: 1},
  {location:"Alberta", newcases: 1, newdeaths:1 , newrecovered:1, cumulativecases:1, cumulativedeaths: 1, cumulativerecovered: 1},
  {location:"Saskatchewan", newcases: 1, newdeaths:1 , newrecovered:1, cumulativecases:1, cumulativedeaths: 1, cumulativerecovered: 1},
  {location:"Manitoba", newcases: 1, newdeaths:1 , newrecovered:1, cumulativecases:1, cumulativedeaths: 1, cumulativerecovered: 1}
];


@Component({
  selector: 'app-table',
  templateUrl: './table.component.html',
  styleUrls: ['./table.component.css']
})

export class TableComponent implements AfterViewInit{
  columnsToDisplay: string[] = ['location','new-cases', 'new-deaths', 'new-recovered','cumulative-cases','cumulative-deaths', 'cumulative-recovered'];
  covidData =  new MatTableDataSource(COVID_DATA);

  constructor(private _liveAnnouncer: LiveAnnouncer) { }
  
  @ViewChild(MatSort)
  sort: MatSort = new MatSort;

  ngAfterViewInit() {
    this.covidData.sort = this.sort;
  }

  /** Announce the change in sort state for assistive technology. */
  announceSortChange(sortState: Sort) {
    // This example uses English messages. If your application supports
    // multiple language, you would internationalize these strings.
    // Furthermore, you can customize the message to add additional
    // details about the values being sorted.
    if (sortState.direction) {
      this._liveAnnouncer.announce(`Sorted ${sortState.direction}ending`);
    } else {
      this._liveAnnouncer.announce('Sorting cleared');
    }
  }


}
